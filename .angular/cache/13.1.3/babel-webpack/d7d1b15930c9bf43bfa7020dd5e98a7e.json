{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { ChangeDetectorRef, EventEmitter, QueryList } from '@angular/core';\nimport { NgxTextDiffService } from './ngx-text-diff.service';\nimport { Observable } from 'rxjs';\nimport { ContainerDirective } from './ngx-text-diff-container.directive';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/scrolling\";\nimport * as i2 from \"./ngx-text-diff.service\";\nimport * as i3 from \"./loader-spinner/loader-spinner.component\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"./ngx-text-diff-container.directive\";\nimport * as i7 from \"./format-line.pipe\";\n\nfunction NgxTextDiffComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelementStart(1, \"div\", 10);\n    i0.ɵɵelementStart(2, \"label\", 11);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function NgxTextDiffComponent_div_1_div_1_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.hideMatchingLinesChanged($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"span\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.toolbarClass)(\"ngStyle\", ctx_r1.toolbarStyle);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Only Show Lines with Differences (\", ctx_r1.diffsCount, \") \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.hideMatchingLines);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    active: a0,\n    disabled: a1\n  };\n};\n\nfunction NgxTextDiffComponent_div_1_div_2_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function NgxTextDiffComponent_div_1_div_2_button_2_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const option_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(3);\n      return ctx_r10.setDiffTableFormat(option_r9.value);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c0, ctx_r8.format === option_r9.value, !!option_r9.disabled))(\"name\", option_r9.name)(\"id\", option_r9.id)(\"disabled\", !!option_r9.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r9.label, \" \");\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelementStart(1, \"div\", 15);\n    i0.ɵɵtemplate(2, NgxTextDiffComponent_div_1_div_2_button_2_Template, 2, 8, \"button\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.formatOptions);\n  }\n}\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"delete-row\": a0,\n    \"empty-row\": a1\n  };\n};\n\nfunction NgxTextDiffComponent_div_1_div_4_tr_3_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵelement(1, \"span\", 25);\n    i0.ɵɵpipe(2, \"formatLine\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r13 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(4, _c1, (row_r13.leftContent == null ? null : row_r13.leftContent.prefix) === \"-\", !(row_r13.leftContent == null ? null : row_r13.leftContent.lineContent)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(2, 2, row_r13.leftContent == null ? null : row_r13.leftContent.lineContent), i0.ɵɵsanitizeHtml);\n  }\n}\n\nconst _c2 = function (a0) {\n  return {\n    highlight: a0\n  };\n};\n\nfunction NgxTextDiffComponent_div_1_div_4_tr_3_td_7_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 27);\n    i0.ɵɵpipe(1, \"formatLine\");\n  }\n\n  if (rf & 2) {\n    const diff_r18 = ctx.$implicit;\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 2, diff_r18.content), i0.ɵɵsanitizeHtml)(\"ngClass\", i0.ɵɵpureFunction1(4, _c2, diff_r18.isDiff));\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_4_tr_3_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtemplate(1, NgxTextDiffComponent_div_1_div_4_tr_3_td_7_span_1_Template, 2, 6, \"span\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c1, (row_r13.leftContent == null ? null : row_r13.leftContent.prefix) === \"-\", !(row_r13.leftContent == null ? null : row_r13.leftContent.lineContent)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r13.leftContent == null ? null : row_r13.leftContent.lineDiffs)(\"ngForTrackBy\", ctx_r15.trackDiffs);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_4_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\", 21);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 22);\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, NgxTextDiffComponent_div_1_div_4_tr_3_td_6_Template, 3, 7, \"td\", 23);\n    i0.ɵɵtemplate(7, NgxTextDiffComponent_div_1_div_4_tr_3_td_7_Template, 2, 6, \"td\", 23);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(6, _c1, (row_r13.leftContent == null ? null : row_r13.leftContent.prefix) === \"-\", !(row_r13.leftContent == null ? null : row_r13.leftContent.lineContent)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (row_r13.leftContent == null ? null : row_r13.leftContent.lineNumber) !== -1 ? row_r13.leftContent == null ? null : row_r13.leftContent.lineNumber : \" \", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c1, (row_r13.leftContent == null ? null : row_r13.leftContent.prefix) === \"-\", !(row_r13.leftContent == null ? null : row_r13.leftContent.lineContent)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((row_r13.leftContent == null ? null : row_r13.leftContent.prefix) || \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !row_r13.hasDiffs);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r13.hasDiffs);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelementStart(1, \"table\", 19);\n    i0.ɵɵelementStart(2, \"tbody\");\n    i0.ɵɵtemplate(3, NgxTextDiffComponent_div_1_div_4_tr_3_Template, 8, 12, \"tr\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.filteredTableRows)(\"ngForTrackBy\", ctx_r3.trackTableRows);\n  }\n}\n\nconst _c3 = function (a0, a1) {\n  return {\n    \"insert-row\": a0,\n    \"empty-row\": a1\n  };\n};\n\nfunction NgxTextDiffComponent_div_1_div_5_tr_3_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵelement(1, \"span\", 25);\n    i0.ɵɵpipe(2, \"formatLine\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r21 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(4, _c3, (row_r21.rightContent == null ? null : row_r21.rightContent.prefix) === \"+\", !(row_r21.rightContent == null ? null : row_r21.rightContent.lineContent)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(2, 2, row_r21.rightContent == null ? null : row_r21.rightContent.lineContent), i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_5_tr_3_td_7_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 27);\n    i0.ɵɵpipe(1, \"formatLine\");\n  }\n\n  if (rf & 2) {\n    const diff_r26 = ctx.$implicit;\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 2, diff_r26.content), i0.ɵɵsanitizeHtml)(\"ngClass\", i0.ɵɵpureFunction1(4, _c2, diff_r26.isDiff));\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_5_tr_3_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtemplate(1, NgxTextDiffComponent_div_1_div_5_tr_3_td_7_span_1_Template, 2, 6, \"span\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r21 = i0.ɵɵnextContext().$implicit;\n    const ctx_r23 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c3, (row_r21.rightContent == null ? null : row_r21.rightContent.prefix) === \"+\", !(row_r21.rightContent == null ? null : row_r21.rightContent.lineContent)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r21.rightContent == null ? null : row_r21.rightContent.lineDiffs)(\"ngForTrackBy\", ctx_r23.trackDiffs);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_5_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\", 21);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 22);\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, NgxTextDiffComponent_div_1_div_5_tr_3_td_6_Template, 3, 7, \"td\", 23);\n    i0.ɵɵtemplate(7, NgxTextDiffComponent_div_1_div_5_tr_3_td_7_Template, 2, 6, \"td\", 23);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r21 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(6, _c3, (row_r21.rightContent == null ? null : row_r21.rightContent.prefix) === \"+\", !(row_r21.rightContent == null ? null : row_r21.rightContent.lineContent)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (row_r21.rightContent == null ? null : row_r21.rightContent.lineNumber) !== -1 ? row_r21.rightContent == null ? null : row_r21.rightContent.lineNumber : \" \", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c3, (row_r21.rightContent == null ? null : row_r21.rightContent.prefix) === \"+\", !(row_r21.rightContent == null ? null : row_r21.rightContent.lineContent)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((row_r21.rightContent == null ? null : row_r21.rightContent.prefix) || \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !row_r21.hasDiffs);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r21.hasDiffs);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵelementStart(1, \"table\", 19);\n    i0.ɵɵelementStart(2, \"tbody\");\n    i0.ɵɵtemplate(3, NgxTextDiffComponent_div_1_div_5_tr_3_Template, 8, 12, \"tr\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.filteredTableRows)(\"ngForTrackBy\", ctx_r4.trackTableRows);\n  }\n}\n\nconst _c4 = function (a0, a1) {\n  return {\n    \"delete-row\": a0,\n    \"insert-row\": a1\n  };\n};\n\nfunction NgxTextDiffComponent_div_1_div_6_tr_3_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵelement(1, \"span\", 25);\n    i0.ɵɵpipe(2, \"formatLine\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r29 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(4, _c4, (row_r29.leftContent == null ? null : row_r29.leftContent.prefix) === \"-\", (row_r29.rightContent == null ? null : row_r29.rightContent.prefix) === \"+\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(2, 2, row_r29.leftContent == null ? null : row_r29.leftContent.lineContent), i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_6_tr_3_td_9_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 27);\n    i0.ɵɵpipe(1, \"formatLine\");\n  }\n\n  if (rf & 2) {\n    const diff_r35 = ctx.$implicit;\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 2, diff_r35.content), i0.ɵɵsanitizeHtml)(\"ngClass\", i0.ɵɵpureFunction1(4, _c2, diff_r35.isDiff));\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_6_tr_3_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtemplate(1, NgxTextDiffComponent_div_1_div_6_tr_3_td_9_span_1_Template, 2, 6, \"span\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r29 = i0.ɵɵnextContext().$implicit;\n    const ctx_r31 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c4, (row_r29.leftContent == null ? null : row_r29.leftContent.prefix) === \"-\", (row_r29.rightContent == null ? null : row_r29.rightContent.prefix) === \"+\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r29.leftContent == null ? null : row_r29.leftContent.lineDiffs)(\"ngForTrackBy\", ctx_r31.trackDiffs);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_6_tr_3_td_10_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 27);\n    i0.ɵɵpipe(1, \"formatLine\");\n  }\n\n  if (rf & 2) {\n    const diff_r38 = ctx.$implicit;\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 2, diff_r38.content), i0.ɵɵsanitizeHtml)(\"ngClass\", i0.ɵɵpureFunction1(4, _c2, diff_r38.isDiff));\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_6_tr_3_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtemplate(1, NgxTextDiffComponent_div_1_div_6_tr_3_td_10_span_1_Template, 2, 6, \"span\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r29 = i0.ɵɵnextContext().$implicit;\n    const ctx_r32 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c4, (row_r29.leftContent == null ? null : row_r29.leftContent.prefix) === \"-\", (row_r29.rightContent == null ? null : row_r29.rightContent.prefix) === \"+\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r29.rightContent == null ? null : row_r29.rightContent.lineDiffs)(\"ngForTrackBy\", ctx_r32.trackDiffs);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_6_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\", 30);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 31);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 22);\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, NgxTextDiffComponent_div_1_div_6_tr_3_td_8_Template, 3, 7, \"td\", 23);\n    i0.ɵɵtemplate(9, NgxTextDiffComponent_div_1_div_6_tr_3_td_9_Template, 2, 6, \"td\", 23);\n    i0.ɵɵtemplate(10, NgxTextDiffComponent_div_1_div_6_tr_3_td_10_Template, 2, 6, \"td\", 23);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r29 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r29.leftContent == null ? null : row_r29.leftContent.lineNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r29.rightContent == null ? null : row_r29.rightContent.lineNumber);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(7, _c4, (row_r29.leftContent == null ? null : row_r29.leftContent.prefix) === \"-\", (row_r29.rightContent == null ? null : row_r29.rightContent.prefix) === \"+\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((row_r29.leftContent == null ? null : row_r29.leftContent.prefix) || (row_r29.rightContent == null ? null : row_r29.rightContent.prefix) || \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !row_r29.hasDiffs);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r29.hasDiffs && row_r29.leftContent && (row_r29.leftContent == null ? null : row_r29.leftContent.lineDiffs.length) !== 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r29.hasDiffs && row_r29.rightContent && (row_r29.rightContent == null ? null : row_r29.rightContent.lineDiffs.length) !== 0);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵelementStart(1, \"table\", 19);\n    i0.ɵɵelementStart(2, \"tbody\");\n    i0.ɵɵtemplate(3, NgxTextDiffComponent_div_1_div_6_tr_3_Template, 11, 10, \"tr\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.filteredTableRowsLineByLine)(\"ngForTrackBy\", ctx_r5.trackTableRows);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, NgxTextDiffComponent_div_1_div_1_Template, 6, 4, \"div\", 3);\n    i0.ɵɵtemplate(2, NgxTextDiffComponent_div_1_div_2_Template, 3, 1, \"div\", 4);\n    i0.ɵɵelementStart(3, \"div\", 5);\n    i0.ɵɵtemplate(4, NgxTextDiffComponent_div_1_div_4_Template, 4, 2, \"div\", 6);\n    i0.ɵɵtemplate(5, NgxTextDiffComponent_div_1_div_5_Template, 4, 2, \"div\", 7);\n    i0.ɵɵtemplate(6, NgxTextDiffComponent_div_1_div_6_Template, 4, 2, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.outerContainerClass)(\"ngStyle\", ctx_r0.outerContainerStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showToolbar);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showToolbar && ctx_r0.showBtnToolbar);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.compareRowsClass)(\"ngStyle\", ctx_r0.compareRowsStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.format === \"SideBySide\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.format === \"SideBySide\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.format === \"LineByLine\");\n  }\n}\n\nexport let NgxTextDiffComponent = /*#__PURE__*/(() => {\n  class NgxTextDiffComponent {\n    constructor(scrollService, diff, cd) {\n      this.scrollService = scrollService;\n      this.diff = diff;\n      this.cd = cd;\n      this._hideMatchingLines = false;\n      this.format = 'SideBySide';\n      this.left = '';\n      this.right = '';\n      this.loading = false;\n      this.showToolbar = true;\n      this.showBtnToolbar = true;\n      this.synchronizeScrolling = true;\n      this.compareResults = new EventEmitter();\n      this.subscriptions = [];\n      this.tableRows = [];\n      this.filteredTableRows = [];\n      this.tableRowsLineByLine = [];\n      this.filteredTableRowsLineByLine = [];\n      this.diffsCount = 0;\n      this.formatOptions = [{\n        id: 'side-by-side',\n        name: 'side-by-side',\n        label: 'Side by Side',\n        value: 'SideBySide',\n        icon: 'la-code'\n      }, {\n        id: 'line-by-line',\n        name: 'line-by-line',\n        label: 'Line by Line',\n        value: 'LineByLine',\n        icon: 'la-file-text'\n      }];\n    }\n\n    get hideMatchingLines() {\n      return this._hideMatchingLines;\n    }\n\n    set hideMatchingLines(hide) {\n      this.hideMatchingLinesChanged(hide);\n    }\n\n    ngOnInit() {\n      this.loading = true;\n\n      if (this.diffContent) {\n        this.subscriptions.push(this.diffContent.subscribe(content => {\n          this.loading = true;\n          this.left = content.leftContent;\n          this.right = content.rightContent;\n          this.renderDiffs().then(() => {\n            this.cd.detectChanges();\n            this.loading = false;\n          }).catch(() => this.loading = false);\n        }));\n      }\n\n      this.renderDiffs().then(() => this.loading = false).catch(e => this.loading = false);\n    }\n\n    ngAfterViewInit() {\n      this.initScrollListener();\n    }\n\n    ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n      }\n    }\n\n    hideMatchingLinesChanged(value) {\n      this._hideMatchingLines = value;\n\n      if (this.hideMatchingLines) {\n        this.filteredTableRows = this.tableRows.filter(row => row.leftContent && row.leftContent.prefix === '-' || row.rightContent && row.rightContent.prefix === '+');\n        this.filteredTableRowsLineByLine = this.tableRowsLineByLine.filter(row => row.leftContent && row.leftContent.prefix === '-' || row.rightContent && row.rightContent.prefix === '+');\n      } else {\n        this.filteredTableRows = this.tableRows;\n        this.filteredTableRowsLineByLine = this.tableRowsLineByLine;\n      }\n    }\n\n    setDiffTableFormat(format) {\n      this.format = format;\n    }\n\n    renderDiffs() {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          this.diffsCount = 0;\n          this.tableRows = yield this.diff.getDiffsByLines(this.left, this.right);\n          this.tableRowsLineByLine = this.tableRows.reduce((tableLineByLine, row) => {\n            if (!tableLineByLine) {\n              tableLineByLine = [];\n            }\n\n            if (row.hasDiffs) {\n              if (row.leftContent) {\n                tableLineByLine.push({\n                  leftContent: row.leftContent,\n                  rightContent: null,\n                  belongTo: row.belongTo,\n                  hasDiffs: true,\n                  numDiffs: row.numDiffs\n                });\n              }\n\n              if (row.rightContent) {\n                tableLineByLine.push({\n                  leftContent: null,\n                  rightContent: row.rightContent,\n                  belongTo: row.belongTo,\n                  hasDiffs: true,\n                  numDiffs: row.numDiffs\n                });\n              }\n            } else {\n              tableLineByLine.push(row);\n            }\n\n            return tableLineByLine;\n          }, []);\n          this.diffsCount = this.tableRows.filter(row => row.hasDiffs).length;\n          this.filteredTableRows = this.tableRows;\n          this.filteredTableRowsLineByLine = this.tableRowsLineByLine;\n          this.emitCompareResultsEvent();\n        } catch (e) {\n          throw e;\n        }\n      });\n    }\n\n    emitCompareResultsEvent() {\n      const diffResults = {\n        hasDiff: this.diffsCount > 0,\n        diffsCount: this.diffsCount,\n        rowsWithDiff: this.tableRows.filter(row => row.hasDiffs).map(row => ({\n          leftLineNumber: row.leftContent ? row.leftContent.lineNumber : null,\n          rightLineNumber: row.rightContent ? row.rightContent.lineNumber : null,\n          numDiffs: row.numDiffs\n        }))\n      };\n      this.compareResults.next(diffResults);\n    }\n\n    trackTableRows(index, row) {\n      return row && row.leftContent ? row.leftContent.lineContent : row && row.rightContent ? row.rightContent.lineContent : undefined;\n    }\n\n    trackDiffs(index, diff) {\n      return diff && diff.content ? diff.content : undefined;\n    }\n\n    initScrollListener() {\n      this.subscriptions.push(this.scrollService.scrolled().subscribe(scrollableEv => {\n        if (scrollableEv && this.synchronizeScrolling) {\n          const scrollableId = scrollableEv.getElementRef().nativeElement.id;\n          const nonScrolledContainer = this.containers.find(container => container.id !== scrollableId);\n\n          if (nonScrolledContainer) {\n            nonScrolledContainer.element.scrollTo({\n              top: scrollableEv.measureScrollOffset('top'),\n              left: scrollableEv.measureScrollOffset('left')\n            });\n          }\n        }\n      }));\n    }\n\n  }\n\n  NgxTextDiffComponent.ɵfac = function NgxTextDiffComponent_Factory(t) {\n    return new (t || NgxTextDiffComponent)(i0.ɵɵdirectiveInject(i1.ScrollDispatcher), i0.ɵɵdirectiveInject(i2.NgxTextDiffService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  NgxTextDiffComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NgxTextDiffComponent,\n    selectors: [[\"td-ngx-text-diff\"]],\n    viewQuery: function NgxTextDiffComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(ContainerDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containers = _t);\n      }\n    },\n    inputs: {\n      format: \"format\",\n      left: \"left\",\n      right: \"right\",\n      diffContent: \"diffContent\",\n      loading: \"loading\",\n      showToolbar: \"showToolbar\",\n      showBtnToolbar: \"showBtnToolbar\",\n      hideMatchingLines: \"hideMatchingLines\",\n      outerContainerClass: \"outerContainerClass\",\n      outerContainerStyle: \"outerContainerStyle\",\n      toolbarClass: \"toolbarClass\",\n      toolbarStyle: \"toolbarStyle\",\n      compareRowsClass: \"compareRowsClass\",\n      compareRowsStyle: \"compareRowsStyle\",\n      synchronizeScrolling: \"synchronizeScrolling\"\n    },\n    outputs: {\n      compareResults: \"compareResults\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[3, \"active\"], [\"class\", \"td-wrapper\", 3, \"ngClass\", \"ngStyle\", 4, \"ngIf\"], [1, \"td-wrapper\", 3, \"ngClass\", \"ngStyle\"], [3, \"ngClass\", \"ngStyle\", 4, \"ngIf\"], [\"class\", \"td-toolbar-select-format\", 4, \"ngIf\"], [1, \"td-table-wrapper\", 3, \"ngClass\", \"ngStyle\"], [\"class\", \"td-table-container side-by-side\", \"id\", \"td-left-compare-container\", \"tdContainer\", \"\", \"cdkScrollable\", \"\", 4, \"ngIf\"], [\"class\", \"td-table-container side-by-side\", \"id\", \"td-right-compare-container\", \"tdContainer\", \"\", \"cdkScrollable\", \"\", 4, \"ngIf\"], [\"class\", \"td-table-container line-by-line\", 4, \"ngIf\"], [3, \"ngClass\", \"ngStyle\"], [1, \"td-toolbar-show-diff\"], [1, \"td-checkbox-container\"], [\"type\", \"checkbox\", \"id\", \"showDiffs\", 3, \"ngModel\", \"ngModelChange\"], [1, \"checkmark\"], [1, \"td-toolbar-select-format\"], [\"data-toggle\", \"buttons\", 1, \"td-btn-group\", \"td-btn-group-toggle\"], [3, \"ngClass\", \"name\", \"id\", \"disabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"name\", \"id\", \"disabled\", \"click\"], [\"id\", \"td-left-compare-container\", \"tdContainer\", \"\", \"cdkScrollable\", \"\", 1, \"td-table-container\", \"side-by-side\"], [1, \"td-table\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"scope\", \"row\", 1, \"fit-column\", \"line-number-col\", 3, \"ngClass\"], [1, \"fit-column\", \"prefix-col\", 3, \"ngClass\"], [\"class\", \"content-col\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"content-col\", 3, \"ngClass\"], [3, \"innerHTML\"], [3, \"innerHTML\", \"ngClass\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"innerHTML\", \"ngClass\"], [\"id\", \"td-right-compare-container\", \"tdContainer\", \"\", \"cdkScrollable\", \"\", 1, \"td-table-container\", \"side-by-side\"], [1, \"td-table-container\", \"line-by-line\"], [\"scope\", \"row\", 1, \"fit-column\", \"line-number-col-left\"], [\"scope\", \"row\", 1, \"fit-column\", \"line-number-col\"]],\n    template: function NgxTextDiffComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"td-loader-spinner\", 0);\n        i0.ɵɵtemplate(1, NgxTextDiffComponent_div_1_Template, 7, 9, \"div\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"active\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      }\n    },\n    directives: [i3.LoaderSpinnerComponent, i4.NgIf, i4.NgClass, i4.NgStyle, i5.CheckboxControlValueAccessor, i5.NgControlStatus, i5.NgModel, i4.NgForOf, i6.ContainerDirective, i1.CdkScrollable],\n    pipes: [i7.FormatLinePipe],\n    styles: [\".td-wrapper[_ngcontent-%COMP%]{display:grid;width:100%;grid-row-gap:10px;grid-template-columns:repeat(2,[col] 50%);grid-template-rows:repeat(2,[row] auto);background-color:#fff;color:#444}.td-toolbar-show-diff[_ngcontent-%COMP%]{grid-column:1;grid-row:1}.td-toolbar-select-format[_ngcontent-%COMP%]{margin-left:auto;grid-column:2;grid-row:1}.td-table-container[_ngcontent-%COMP%]{grid-column:1 / 2;grid-row:2;width:100%;max-width:100%;overflow-x:auto}.td-table-wrapper[_ngcontent-%COMP%]{display:flex;width:200%}.td-table[_ngcontent-%COMP%]{border:1px solid darkgray;max-height:50vh;width:100%;max-width:100%}.fit-column[_ngcontent-%COMP%]{width:1px;white-space:nowrap}.line-number-col[_ngcontent-%COMP%]{position:relative;position:-webkit-sticky;position:sticky;left:0;top:auto;border-right:1px solid #ddd;color:#999;text-align:right;background-color:#f7f7f7;padding-left:10px;padding-right:10px;font-size:87.5%}.line-number-col-left[_ngcontent-%COMP%]{color:#999;padding-left:10px;padding-right:10px;text-align:right;background-color:#f7f7f7;font-size:87.5%}.insert-row[_ngcontent-%COMP%], .insert-row[_ngcontent-%COMP%] > .line-number-col[_ngcontent-%COMP%]{background-color:#dfd;border-color:#b4e2b4}.delete-row[_ngcontent-%COMP%], .delete-row[_ngcontent-%COMP%] > .line-number-col[_ngcontent-%COMP%]{background-color:#fee8e9;border-color:#e9aeae}.empty-row[_ngcontent-%COMP%]{background-color:#f7f7f7;height:24px}.td-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-top:0;padding-top:0;padding-bottom:0;white-space:nowrap;max-width:50%}pre[_ngcontent-%COMP%]{margin-bottom:0}td.content-col[_ngcontent-%COMP%]{padding:0;margin:0;line-height:24px}td.prefix-col[_ngcontent-%COMP%]{padding-left:10px;padding-right:10px;line-height:24px}.td-btn-group[_ngcontent-%COMP%]{border-radius:4px}.td-btn-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#17a2b8b3;border:1px solid #17a2b8;color:#fff;cursor:pointer;float:left}.td-btn-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:not(:last-child){border-right:none}.td-btn-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:first-child{-webkit-border-top-left-radius:4px;-webkit-border-bottom-left-radius:4px;-moz-border-radius-topleft:4px;-moz-border-radius-bottomleft:4px;border-top-left-radius:4px;border-bottom-left-radius:4px}.td-btn-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-child{-webkit-border-top-right-radius:4px;-webkit-border-bottom-right-radius:4px;-moz-border-radius-topright:4px;-moz-border-radius-bottomright:4px;border-top-right-radius:4px;border-bottom-right-radius:4px}.td-btn-group[_ngcontent-%COMP%]:after{content:\\\"\\\";clear:both;display:table}.td-btn-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, .td-btn-group[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#17a2b8}.td-checkbox-container[_ngcontent-%COMP%]{display:block;position:relative;padding-left:21px;margin-bottom:0;cursor:pointer;font-size:16px;line-height:28px;-webkit-user-select:none;-moz-user-select:none;user-select:none}.td-checkbox-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.checkmark[_ngcontent-%COMP%]{position:absolute;top:7px;left:0;height:16px;width:16px;background-color:#eee}.td-checkbox-container[_ngcontent-%COMP%]:hover   input[_ngcontent-%COMP%] ~ .checkmark[_ngcontent-%COMP%]{background-color:#ccc}.td-checkbox-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked ~ .checkmark[_ngcontent-%COMP%]{background-color:#17a2b8}.checkmark[_ngcontent-%COMP%]:after{content:\\\"\\\";position:absolute;display:none}.td-checkbox-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked ~ .checkmark[_ngcontent-%COMP%]:after{display:block}.td-checkbox-container[_ngcontent-%COMP%]   .checkmark[_ngcontent-%COMP%]:after{left:5px;top:3px;width:5px;height:10px;border:solid white;border-width:0 3px 3px 0;transform:rotate(45deg)}.insert-row[_ngcontent-%COMP%] > .highlight[_ngcontent-%COMP%]{background-color:#acf2bd!important}.delete-row[_ngcontent-%COMP%] > .highlight[_ngcontent-%COMP%]{background-color:#fdb8c0!important}\"]\n  });\n  return NgxTextDiffComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}